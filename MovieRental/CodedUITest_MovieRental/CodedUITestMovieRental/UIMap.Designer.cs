// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestMovieRental
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod_CreateCustomer - Use 'RecordedMethod_CreateCustomerParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_CreateCustomer()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UIHomePageMovieRentalIWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            HtmlHyperlink uICustomersHyperlink = this.UIHomePageMovieRentalIWindow.UIHomePageMovieRentalDocument.UICustomersHyperlink;
            HtmlHyperlink uICreateNewCustomerHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument.UICreateNewCustomerHyperlink;
            HtmlEdit uINameEdit = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument.UINameEdit;
            HtmlEdit uIDobEdit = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument.UIDobEdit;
            HtmlEdit uIEmailEdit = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument.UIEmailEdit;
            HtmlEdit uIPhoneEdit = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument.UIPhoneEdit;
            HtmlInputButton uICreateButton = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument.UICreateButton;
            #endregion

            // Type 'http://localhost:24817/' in 'Address and search using Bing' text box
            uIAddressandsearchusinEdit.Text = this.RecordedMethod_CreateCustomerParams.UIAddressandsearchusinEditText;

            // Type '{Enter}' in 'Address and search using Bing' text box
            Keyboard.SendKeys(uIAddressandsearchusinEdit, this.RecordedMethod_CreateCustomerParams.UIAddressandsearchusinEditSendKeys, ModifierKeys.None);

            // Click 'Customers' link
            Mouse.Click(uICustomersHyperlink, new Point(82, 26));

            // Click 'Create New Customer' link
            Mouse.Click(uICreateNewCustomerHyperlink, new Point(166, 19));

            // Type 'Donald Trump' in 'Name' text box
            uINameEdit.Text = this.RecordedMethod_CreateCustomerParams.UINameEditText;

            // Type '12/06/1964' in 'Dob' text box
            uIDobEdit.Text = this.RecordedMethod_CreateCustomerParams.UIDobEditText;

            // Type 'donaldtrump@gmail.com' in 'Email' text box
            uIEmailEdit.Text = this.RecordedMethod_CreateCustomerParams.UIEmailEditText;

            // Type '021232342423' in 'Phone' text box
            uIPhoneEdit.Text = this.RecordedMethod_CreateCustomerParams.UIPhoneEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(69, 50));
        }
        
        /// <summary>
        /// RecordedMethod_SearchCustomer - Use 'RecordedMethod_SearchCustomerParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_SearchCustomer()
        {
            #region Variable Declarations
            HtmlEdit uISearchStringEdit = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument.UISearchStringEdit;
            HtmlInputButton uISearchButton = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument.UISearchButton;
            #endregion

            // Type 'Donald' in 'SearchString' text box
            uISearchStringEdit.Text = this.RecordedMethod_SearchCustomerParams.UISearchStringEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(29, 34));
        }
        
        /// <summary>
        /// AssertMethod_SearchCustomer - Use 'AssertMethod_SearchCustomerExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_SearchCustomer()
        {
            #region Variable Declarations
            HtmlCell uIDonaldTrumpCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument1.UIItemTable.UIDonaldTrumpCell;
            #endregion

            // Verify that the 'InnerText' property of 'Donald Trump' cell equals 'Donald Trump '
            Assert.AreEqual(this.AssertMethod_SearchCustomerExpectedValues.UIDonaldTrumpCellInnerText, uIDonaldTrumpCell.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_EditCustomer - Use 'RecordedMethod_EditCustomerParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_EditCustomer()
        {
            #region Variable Declarations
            HtmlHyperlink uIEditHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument.UIEditHyperlink;
            HtmlEdit uINameEdit = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument3.UINameEdit;
            HtmlEdit uIDobEdit = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument3.UIDobEdit;
            HtmlEdit uIEmailEdit = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument3.UIEmailEdit;
            HtmlEdit uIPhoneEdit = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument3.UIPhoneEdit;
            HtmlInputButton uISaveButton = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument3.UISaveButton;
            #endregion

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(11, 12));

            // Type 'Donald Will Fly' in 'Name' text box
            uINameEdit.Text = this.RecordedMethod_EditCustomerParams.UINameEditText;

            // Type '1976-08-01' in 'Dob' text box
            uIDobEdit.Text = this.RecordedMethod_EditCustomerParams.UIDobEditText;

            // Type 'donaldwillfly@gmail.com' in 'Email' text box
            uIEmailEdit.Text = this.RecordedMethod_EditCustomerParams.UIEmailEditText;

            // Type '0112342342342' in 'Phone' text box
            uIPhoneEdit.Text = this.RecordedMethod_EditCustomerParams.UIPhoneEditText;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(46, 23));
        }
        
        /// <summary>
        /// RecordedMethod_DetailsCustomer
        /// </summary>
        public void RecordedMethod_DetailsCustomer()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink1 = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument.UIDetailsHyperlink1;
            #endregion

            // Click 'Details' link
            Mouse.Click(uIDetailsHyperlink1, new Point(23, 14));
        }
        
        /// <summary>
        /// RecordedMethod_CreateDirector - Use 'RecordedMethod_CreateDirectorParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_CreateDirector()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UIHomePageMovieRentalIWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            HtmlHyperlink uIDirectorsHyperlink = this.UIHomePageMovieRentalIWindow.UIHomePageMovieRentalDocument.UIDirectorsHyperlink;
            HtmlHyperlink uICreateNewDirectorHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument2.UICreateNewDirectorHyperlink;
            HtmlEdit uINameEdit = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument1.UINameEdit;
            HtmlRadioButton uIGenderRadioButton = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument1.UIGenderRadioButton;
            HtmlInputButton uICreateButton = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument1.UICreateButton;
            #endregion

            // Type 'http://localhost:24817/' in 'Address and search using Bing' text box
            uIAddressandsearchusinEdit.Text = this.RecordedMethod_CreateDirectorParams.UIAddressandsearchusinEditText;

            // Type '{Enter}' in 'Address and search using Bing' text box
            Keyboard.SendKeys(uIAddressandsearchusinEdit, this.RecordedMethod_CreateDirectorParams.UIAddressandsearchusinEditSendKeys, ModifierKeys.None);

            // Click 'Directors' link
            Mouse.Click(uIDirectorsHyperlink, new Point(82, 43));

            // Click 'Create New Director' link
            Mouse.Click(uICreateNewDirectorHyperlink, new Point(135, 11));

            // Type 'Alice Spring' in 'Name' text box
            uINameEdit.Text = this.RecordedMethod_CreateDirectorParams.UINameEditText;

            // Select 'Gender' radio button
            uIGenderRadioButton.Selected = this.RecordedMethod_CreateDirectorParams.UIGenderRadioButtonSelected;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(56, 9));
        }
        
        /// <summary>
        /// AssertMethod_CreateDirector - Use 'AssertMethod_CreateDirectorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_CreateDirector()
        {
            #region Variable Declarations
            HtmlCell uIAliceSpringCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument2.UIItemTable.UIAliceSpringCell;
            #endregion

            // Verify that the 'InnerText' property of 'Alice Spring' cell equals 'Alice Spring '
            Assert.AreEqual(this.AssertMethod_CreateDirectorExpectedValues.UIAliceSpringCellInnerText, uIAliceSpringCell.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_SearchDirector - Use 'RecordedMethod_SearchDirectorParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_SearchDirector()
        {
            #region Variable Declarations
            HtmlEdit uISearchStringEdit = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument2.UISearchStringEdit;
            HtmlInputButton uISearchButton = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument2.UISearchButton;
            #endregion

            // Type 'Alice' in 'SearchString' text box
            uISearchStringEdit.Text = this.RecordedMethod_SearchDirectorParams.UISearchStringEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(47, 41));
        }
        
        /// <summary>
        /// AssertMethod_SearchDirector - Use 'AssertMethod_SearchDirectorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_SearchDirector()
        {
            #region Variable Declarations
            HtmlCell uIAliceSpringCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument3.UIItemTable.UIAliceSpringCell;
            #endregion

            // Verify that the 'InnerText' property of 'Alice Spring' cell equals 'Alice Spring '
            Assert.AreEqual(this.AssertMethod_SearchDirectorExpectedValues.UIAliceSpringCellInnerText, uIAliceSpringCell.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_EditDirector - Use 'RecordedMethod_EditDirectorParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_EditDirector()
        {
            #region Variable Declarations
            HtmlHyperlink uIEditHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument3.UIEditHyperlink;
            HtmlEdit uINameEdit = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument1.UINameEdit;
            HtmlRadioButton uIGenderRadioButton = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument1.UIGenderRadioButton;
            HtmlInputButton uISaveButton = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument1.UISaveButton;
            #endregion

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(9, 12));

            // Type 'Boblan Winter' in 'Name' text box
            uINameEdit.Text = this.RecordedMethod_EditDirectorParams.UINameEditText;

            // Select 'Gender' radio button
            uIGenderRadioButton.Selected = this.RecordedMethod_EditDirectorParams.UIGenderRadioButtonSelected;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(40, 36));
        }
        
        /// <summary>
        /// AssertMethod_EditDirector - Use 'AssertMethod_EditDirectorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_EditDirector()
        {
            #region Variable Declarations
            HtmlCell uIBoblanWinterCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument2.UIItemTable1.UIBoblanWinterCell;
            #endregion

            // Verify that the 'InnerText' property of 'Boblan Winter' cell equals 'Boblan Winter '
            Assert.AreEqual(this.AssertMethod_EditDirectorExpectedValues.UIBoblanWinterCellInnerText, uIBoblanWinterCell.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_DetailsDirector
        /// </summary>
        public void RecordedMethod_DetailsDirector()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument2.UIDetailsHyperlink;
            #endregion

            // Click 'Details' link
            Mouse.Click(uIDetailsHyperlink, new Point(30, 12));
        }
        
        /// <summary>
        /// AssertMethod_DetailsDirector - Use 'AssertMethod_DetailsDirectorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_DetailsDirector()
        {
            #region Variable Declarations
            HtmlCustom uIBoblanWinterCustom = this.UIHomePageMovieRentalIWindow.UIDetailsMovieRentalDocument1.UIBoblanWinterCustom;
            #endregion

            // Verify that the 'InnerText' property of 'Boblan Winter' custom control equals 'Boblan Winter '
            Assert.AreEqual(this.AssertMethod_DetailsDirectorExpectedValues.UIBoblanWinterCustomInnerText, uIBoblanWinterCustom.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_CreateMovie - Use 'RecordedMethod_CreateMovieParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_CreateMovie()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UIHomePageMovieRentalIWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            HtmlHyperlink uIMoviesHyperlink = this.UIHomePageMovieRentalIWindow.UIHomePageMovieRentalDocument.UIMoviesHyperlink;
            HtmlHyperlink uICreateNewMovieHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument4.UICreateNewMovieHyperlink;
            HtmlComboBox uIDirectorIdComboBox1 = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument2.UIDirectorIdComboBox1;
            HtmlEdit uITitleEdit = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument2.UITitleEdit;
            HtmlEdit uIReleaseYearEdit = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument2.UIReleaseYearEdit;
            HtmlInputButton uICreateButton = this.UIHomePageMovieRentalIWindow.UICreateMovieRentalDocument2.UICreateButton;
            #endregion

            // Type 'http://localhost:24817/' in 'Address and search using Bing' text box
            uIAddressandsearchusinEdit.Text = this.RecordedMethod_CreateMovieParams.UIAddressandsearchusinEditText;

            // Type '{Enter}' in 'Address and search using Bing' text box
            Keyboard.SendKeys(uIAddressandsearchusinEdit, this.RecordedMethod_CreateMovieParams.UIAddressandsearchusinEditSendKeys, ModifierKeys.None);

            // Click 'Movies' link
            Mouse.Click(uIMoviesHyperlink, new Point(73, 31));

            // Click 'Create New Movie' link
            Mouse.Click(uICreateNewMovieHyperlink, new Point(114, 12));

            // Select 'Britney Spears' in 'DirectorId' combo box
            uIDirectorIdComboBox1.SelectedItem = this.RecordedMethod_CreateMovieParams.UIDirectorIdComboBox1SelectedItem;

            // Type 'Gone With The Wind' in 'Title' text box
            uITitleEdit.Text = this.RecordedMethod_CreateMovieParams.UITitleEditText;

            // Type '1965' in 'ReleaseYear' text box
            uIReleaseYearEdit.Text = this.RecordedMethod_CreateMovieParams.UIReleaseYearEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(44, 18));
        }
        
        /// <summary>
        /// RecordedMethod_SearchMovie - Use 'RecordedMethod_SearchMovieParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_SearchMovie()
        {
            #region Variable Declarations
            HtmlEdit uISearchStringEdit = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument4.UISearchStringEdit;
            HtmlInputButton uISearchButton = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument4.UISearchButton;
            #endregion

            // Type 'Gone with' in 'SearchString' text box
            uISearchStringEdit.Text = this.RecordedMethod_SearchMovieParams.UISearchStringEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(39, 28));
        }
        
        /// <summary>
        /// AssertMethod_SearchMovie - Use 'AssertMethod_SearchMovieExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_SearchMovie()
        {
            #region Variable Declarations
            HtmlCell uIGoneWithTheWindCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument5.UIItemTable.UIGoneWithTheWindCell;
            #endregion

            // Verify that the 'InnerText' property of 'Gone With The Wind' cell equals 'Gone With The Wind '
            Assert.AreEqual(this.AssertMethod_SearchMovieExpectedValues.UIGoneWithTheWindCellInnerText, uIGoneWithTheWindCell.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_EditMovie - Use 'RecordedMethod_EditMovieParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_EditMovie()
        {
            #region Variable Declarations
            HtmlHyperlink uIEditHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument5.UIEditHyperlink;
            HtmlEdit uITitleEdit = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument2.UITitleEdit;
            HtmlEdit uIReleaseYearEdit = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument2.UIReleaseYearEdit;
            HtmlInputButton uISaveButton = this.UIHomePageMovieRentalIWindow.UIEditMovieRentalDocument2.UISaveButton;
            #endregion

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(22, 12));

            // Type 'Fly to the moon' in 'Title' text box
            uITitleEdit.Text = this.RecordedMethod_EditMovieParams.UITitleEditText;

            // Type '1987' in 'ReleaseYear' text box
            uIReleaseYearEdit.Text = this.RecordedMethod_EditMovieParams.UIReleaseYearEditText;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(16, 24));
        }
        
        /// <summary>
        /// AssertMethod_EditMovie - Use 'AssertMethod_EditMovieExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_EditMovie()
        {
            #region Variable Declarations
            HtmlCell uIFlytothemoonCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument4.UIItemTable1.UIFlytothemoonCell;
            #endregion

            // Verify that the 'InnerText' property of 'Fly to the moon' cell equals 'Fly to the moon '
            Assert.AreEqual(this.AssertMethod_EditMovieExpectedValues.UIFlytothemoonCellInnerText, uIFlytothemoonCell.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_DetailsMovie
        /// </summary>
        public void RecordedMethod_DetailsMovie()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument4.UIDetailsHyperlink;
            #endregion

            // Click 'Details' link
            Mouse.Click(uIDetailsHyperlink, new Point(27, 4));
        }
        
        /// <summary>
        /// AssertMethod_DetailsMovie - Use 'AssertMethod_DetailsMovieExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_DetailsMovie()
        {
            #region Variable Declarations
            HtmlCustom uIFlytothemoonCustom = this.UIHomePageMovieRentalIWindow.UIDetailsMovieRentalDocument2.UIFlytothemoonCustom;
            #endregion

            // Verify that the 'InnerText' property of 'Fly to the moon' custom control equals 'Fly to the moon '
            Assert.AreEqual(this.AssertMethod_DetailsMovieExpectedValues.UIFlytothemoonCustomInnerText, uIFlytothemoonCustom.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod_BackToMainPage
        /// </summary>
        public void RecordedMethod_BackToMainPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIHomeHyperlink = this.UIHomePageMovieRentalIWindow.UIDetailsMovieRentalDocument2.UIHomeHyperlink;
            #endregion

            // Click 'Home' link
            Mouse.Click(uIHomeHyperlink, new Point(46, 31));
        }
        
        /// <summary>
        /// AssertMethod_CreateMovie - Use 'AssertMethod_CreateMovieExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_CreateMovie()
        {
            #region Variable Declarations
            HtmlCell uIGonewiththewindCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument4.UIItemTable2.UIGonewiththewindCell;
            #endregion

            // Verify that the 'InnerText' property of 'Gone with the wind' cell equals 'Gone With The Wind '
            Assert.AreEqual(this.AssertMethod_CreateMovieExpectedValues.UIGonewiththewindCellInnerText, uIGonewiththewindCell.InnerText);
        }
        
        /// <summary>
        /// AssertMethod_CreateCustomer - Use 'AssertMethod_CreateCustomerExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_CreateCustomer()
        {
            #region Variable Declarations
            HtmlCell uIDonaldTrumpCell1 = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument.UIItemTable.UIDonaldTrumpCell1;
            #endregion

            // Verify that the 'InnerText' property of 'Donald Trump' cell equals 'Donald Trump '
            Assert.AreEqual(this.AssertMethod_CreateCustomerExpectedValues.UIDonaldTrumpCell1InnerText, uIDonaldTrumpCell1.InnerText);
        }
        
        /// <summary>
        /// AssertMethod_EditCustomer - Use 'AssertMethod_EditCustomerExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_EditCustomer()
        {
            #region Variable Declarations
            HtmlCell uIDonaldWillFlyCell = this.UIHomePageMovieRentalIWindow.UIIndexMovieRentalDocument.UIItemTable.UIDonaldWillFlyCell;
            #endregion

            // Verify that the 'InnerText' property of 'Donald Will Fly' cell equals 'Donald Will Fly '
            Assert.AreEqual(this.AssertMethod_EditCustomerExpectedValues.UIDonaldWillFlyCellInnerText, uIDonaldWillFlyCell.InnerText);
        }
        
        /// <summary>
        /// AssertMethod_DeatilsCustomer - Use 'AssertMethod_DeatilsCustomerExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_DeatilsCustomer()
        {
            #region Variable Declarations
            HtmlCustom uIDonaldWillFlyCustom = this.UIHomePageMovieRentalIWindow.UIDetailsMovieRentalDocument3.UIDonaldWillFlyCustom;
            #endregion

            // Verify that the 'InnerText' property of 'Donald Will Fly' custom control equals 'Donald Will Fly '
            Assert.AreEqual(this.AssertMethod_DeatilsCustomerExpectedValues.UIDonaldWillFlyCustomInnerText, uIDonaldWillFlyCustom.InnerText);
        }
        
        #region Properties
        public virtual RecordedMethod_CreateCustomerParams RecordedMethod_CreateCustomerParams
        {
            get
            {
                if ((this.mRecordedMethod_CreateCustomerParams == null))
                {
                    this.mRecordedMethod_CreateCustomerParams = new RecordedMethod_CreateCustomerParams();
                }
                return this.mRecordedMethod_CreateCustomerParams;
            }
        }
        
        public virtual RecordedMethod_SearchCustomerParams RecordedMethod_SearchCustomerParams
        {
            get
            {
                if ((this.mRecordedMethod_SearchCustomerParams == null))
                {
                    this.mRecordedMethod_SearchCustomerParams = new RecordedMethod_SearchCustomerParams();
                }
                return this.mRecordedMethod_SearchCustomerParams;
            }
        }
        
        public virtual AssertMethod_SearchCustomerExpectedValues AssertMethod_SearchCustomerExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_SearchCustomerExpectedValues == null))
                {
                    this.mAssertMethod_SearchCustomerExpectedValues = new AssertMethod_SearchCustomerExpectedValues();
                }
                return this.mAssertMethod_SearchCustomerExpectedValues;
            }
        }
        
        public virtual RecordedMethod_EditCustomerParams RecordedMethod_EditCustomerParams
        {
            get
            {
                if ((this.mRecordedMethod_EditCustomerParams == null))
                {
                    this.mRecordedMethod_EditCustomerParams = new RecordedMethod_EditCustomerParams();
                }
                return this.mRecordedMethod_EditCustomerParams;
            }
        }
        
        public virtual RecordedMethod_CreateDirectorParams RecordedMethod_CreateDirectorParams
        {
            get
            {
                if ((this.mRecordedMethod_CreateDirectorParams == null))
                {
                    this.mRecordedMethod_CreateDirectorParams = new RecordedMethod_CreateDirectorParams();
                }
                return this.mRecordedMethod_CreateDirectorParams;
            }
        }
        
        public virtual AssertMethod_CreateDirectorExpectedValues AssertMethod_CreateDirectorExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_CreateDirectorExpectedValues == null))
                {
                    this.mAssertMethod_CreateDirectorExpectedValues = new AssertMethod_CreateDirectorExpectedValues();
                }
                return this.mAssertMethod_CreateDirectorExpectedValues;
            }
        }
        
        public virtual RecordedMethod_SearchDirectorParams RecordedMethod_SearchDirectorParams
        {
            get
            {
                if ((this.mRecordedMethod_SearchDirectorParams == null))
                {
                    this.mRecordedMethod_SearchDirectorParams = new RecordedMethod_SearchDirectorParams();
                }
                return this.mRecordedMethod_SearchDirectorParams;
            }
        }
        
        public virtual AssertMethod_SearchDirectorExpectedValues AssertMethod_SearchDirectorExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_SearchDirectorExpectedValues == null))
                {
                    this.mAssertMethod_SearchDirectorExpectedValues = new AssertMethod_SearchDirectorExpectedValues();
                }
                return this.mAssertMethod_SearchDirectorExpectedValues;
            }
        }
        
        public virtual RecordedMethod_EditDirectorParams RecordedMethod_EditDirectorParams
        {
            get
            {
                if ((this.mRecordedMethod_EditDirectorParams == null))
                {
                    this.mRecordedMethod_EditDirectorParams = new RecordedMethod_EditDirectorParams();
                }
                return this.mRecordedMethod_EditDirectorParams;
            }
        }
        
        public virtual AssertMethod_EditDirectorExpectedValues AssertMethod_EditDirectorExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_EditDirectorExpectedValues == null))
                {
                    this.mAssertMethod_EditDirectorExpectedValues = new AssertMethod_EditDirectorExpectedValues();
                }
                return this.mAssertMethod_EditDirectorExpectedValues;
            }
        }
        
        public virtual AssertMethod_DetailsDirectorExpectedValues AssertMethod_DetailsDirectorExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_DetailsDirectorExpectedValues == null))
                {
                    this.mAssertMethod_DetailsDirectorExpectedValues = new AssertMethod_DetailsDirectorExpectedValues();
                }
                return this.mAssertMethod_DetailsDirectorExpectedValues;
            }
        }
        
        public virtual RecordedMethod_CreateMovieParams RecordedMethod_CreateMovieParams
        {
            get
            {
                if ((this.mRecordedMethod_CreateMovieParams == null))
                {
                    this.mRecordedMethod_CreateMovieParams = new RecordedMethod_CreateMovieParams();
                }
                return this.mRecordedMethod_CreateMovieParams;
            }
        }
        
        public virtual RecordedMethod_SearchMovieParams RecordedMethod_SearchMovieParams
        {
            get
            {
                if ((this.mRecordedMethod_SearchMovieParams == null))
                {
                    this.mRecordedMethod_SearchMovieParams = new RecordedMethod_SearchMovieParams();
                }
                return this.mRecordedMethod_SearchMovieParams;
            }
        }
        
        public virtual AssertMethod_SearchMovieExpectedValues AssertMethod_SearchMovieExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_SearchMovieExpectedValues == null))
                {
                    this.mAssertMethod_SearchMovieExpectedValues = new AssertMethod_SearchMovieExpectedValues();
                }
                return this.mAssertMethod_SearchMovieExpectedValues;
            }
        }
        
        public virtual RecordedMethod_EditMovieParams RecordedMethod_EditMovieParams
        {
            get
            {
                if ((this.mRecordedMethod_EditMovieParams == null))
                {
                    this.mRecordedMethod_EditMovieParams = new RecordedMethod_EditMovieParams();
                }
                return this.mRecordedMethod_EditMovieParams;
            }
        }
        
        public virtual AssertMethod_EditMovieExpectedValues AssertMethod_EditMovieExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_EditMovieExpectedValues == null))
                {
                    this.mAssertMethod_EditMovieExpectedValues = new AssertMethod_EditMovieExpectedValues();
                }
                return this.mAssertMethod_EditMovieExpectedValues;
            }
        }
        
        public virtual AssertMethod_DetailsMovieExpectedValues AssertMethod_DetailsMovieExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_DetailsMovieExpectedValues == null))
                {
                    this.mAssertMethod_DetailsMovieExpectedValues = new AssertMethod_DetailsMovieExpectedValues();
                }
                return this.mAssertMethod_DetailsMovieExpectedValues;
            }
        }
        
        public virtual AssertMethod_CreateMovieExpectedValues AssertMethod_CreateMovieExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_CreateMovieExpectedValues == null))
                {
                    this.mAssertMethod_CreateMovieExpectedValues = new AssertMethod_CreateMovieExpectedValues();
                }
                return this.mAssertMethod_CreateMovieExpectedValues;
            }
        }
        
        public virtual AssertMethod_CreateCustomerExpectedValues AssertMethod_CreateCustomerExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_CreateCustomerExpectedValues == null))
                {
                    this.mAssertMethod_CreateCustomerExpectedValues = new AssertMethod_CreateCustomerExpectedValues();
                }
                return this.mAssertMethod_CreateCustomerExpectedValues;
            }
        }
        
        public virtual AssertMethod_EditCustomerExpectedValues AssertMethod_EditCustomerExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_EditCustomerExpectedValues == null))
                {
                    this.mAssertMethod_EditCustomerExpectedValues = new AssertMethod_EditCustomerExpectedValues();
                }
                return this.mAssertMethod_EditCustomerExpectedValues;
            }
        }
        
        public virtual AssertMethod_DeatilsCustomerExpectedValues AssertMethod_DeatilsCustomerExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_DeatilsCustomerExpectedValues == null))
                {
                    this.mAssertMethod_DeatilsCustomerExpectedValues = new AssertMethod_DeatilsCustomerExpectedValues();
                }
                return this.mAssertMethod_DeatilsCustomerExpectedValues;
            }
        }
        
        public UIHomePageMovieRentalIWindow UIHomePageMovieRentalIWindow
        {
            get
            {
                if ((this.mUIHomePageMovieRentalIWindow == null))
                {
                    this.mUIHomePageMovieRentalIWindow = new UIHomePageMovieRentalIWindow();
                }
                return this.mUIHomePageMovieRentalIWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod_CreateCustomerParams mRecordedMethod_CreateCustomerParams;
        
        private RecordedMethod_SearchCustomerParams mRecordedMethod_SearchCustomerParams;
        
        private AssertMethod_SearchCustomerExpectedValues mAssertMethod_SearchCustomerExpectedValues;
        
        private RecordedMethod_EditCustomerParams mRecordedMethod_EditCustomerParams;
        
        private RecordedMethod_CreateDirectorParams mRecordedMethod_CreateDirectorParams;
        
        private AssertMethod_CreateDirectorExpectedValues mAssertMethod_CreateDirectorExpectedValues;
        
        private RecordedMethod_SearchDirectorParams mRecordedMethod_SearchDirectorParams;
        
        private AssertMethod_SearchDirectorExpectedValues mAssertMethod_SearchDirectorExpectedValues;
        
        private RecordedMethod_EditDirectorParams mRecordedMethod_EditDirectorParams;
        
        private AssertMethod_EditDirectorExpectedValues mAssertMethod_EditDirectorExpectedValues;
        
        private AssertMethod_DetailsDirectorExpectedValues mAssertMethod_DetailsDirectorExpectedValues;
        
        private RecordedMethod_CreateMovieParams mRecordedMethod_CreateMovieParams;
        
        private RecordedMethod_SearchMovieParams mRecordedMethod_SearchMovieParams;
        
        private AssertMethod_SearchMovieExpectedValues mAssertMethod_SearchMovieExpectedValues;
        
        private RecordedMethod_EditMovieParams mRecordedMethod_EditMovieParams;
        
        private AssertMethod_EditMovieExpectedValues mAssertMethod_EditMovieExpectedValues;
        
        private AssertMethod_DetailsMovieExpectedValues mAssertMethod_DetailsMovieExpectedValues;
        
        private AssertMethod_CreateMovieExpectedValues mAssertMethod_CreateMovieExpectedValues;
        
        private AssertMethod_CreateCustomerExpectedValues mAssertMethod_CreateCustomerExpectedValues;
        
        private AssertMethod_EditCustomerExpectedValues mAssertMethod_EditCustomerExpectedValues;
        
        private AssertMethod_DeatilsCustomerExpectedValues mAssertMethod_DeatilsCustomerExpectedValues;
        
        private UIHomePageMovieRentalIWindow mUIHomePageMovieRentalIWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_CreateCustomer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_CreateCustomerParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'http://localhost:24817/' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditText = "http://localhost:24817/";
        
        /// <summary>
        /// Type '{Enter}' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'Donald Trump' in 'Name' text box
        /// </summary>
        public string UINameEditText = "Donald Trump";
        
        /// <summary>
        /// Type '12/06/1964' in 'Dob' text box
        /// </summary>
        public string UIDobEditText = "12/06/1964";
        
        /// <summary>
        /// Type 'donaldtrump@gmail.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "donaldtrump@gmail.com";
        
        /// <summary>
        /// Type '021232342423' in 'Phone' text box
        /// </summary>
        public string UIPhoneEditText = "021232342423";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_SearchCustomer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_SearchCustomerParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Donald' in 'SearchString' text box
        /// </summary>
        public string UISearchStringEditText = "Donald";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_SearchCustomer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_SearchCustomerExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Donald Trump' cell equals 'Donald Trump '
        /// </summary>
        public string UIDonaldTrumpCellInnerText = "Donald Trump ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_EditCustomer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_EditCustomerParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Donald Will Fly' in 'Name' text box
        /// </summary>
        public string UINameEditText = "Donald Will Fly";
        
        /// <summary>
        /// Type '1976-08-01' in 'Dob' text box
        /// </summary>
        public string UIDobEditText = "1976-08-01";
        
        /// <summary>
        /// Type 'donaldwillfly@gmail.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "donaldwillfly@gmail.com";
        
        /// <summary>
        /// Type '0112342342342' in 'Phone' text box
        /// </summary>
        public string UIPhoneEditText = "0112342342342";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_CreateDirector'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_CreateDirectorParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'http://localhost:24817/' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditText = "http://localhost:24817/";
        
        /// <summary>
        /// Type '{Enter}' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'Alice Spring' in 'Name' text box
        /// </summary>
        public string UINameEditText = "Alice Spring";
        
        /// <summary>
        /// Select 'Gender' radio button
        /// </summary>
        public bool UIGenderRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_CreateDirector'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_CreateDirectorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Alice Spring' cell equals 'Alice Spring '
        /// </summary>
        public string UIAliceSpringCellInnerText = "Alice Spring ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_SearchDirector'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_SearchDirectorParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Alice' in 'SearchString' text box
        /// </summary>
        public string UISearchStringEditText = "Alice";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_SearchDirector'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_SearchDirectorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Alice Spring' cell equals 'Alice Spring '
        /// </summary>
        public string UIAliceSpringCellInnerText = "Alice Spring ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_EditDirector'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_EditDirectorParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Boblan Winter' in 'Name' text box
        /// </summary>
        public string UINameEditText = "Boblan Winter";
        
        /// <summary>
        /// Select 'Gender' radio button
        /// </summary>
        public bool UIGenderRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_EditDirector'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_EditDirectorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Boblan Winter' cell equals 'Boblan Winter '
        /// </summary>
        public string UIBoblanWinterCellInnerText = "Boblan Winter ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_DetailsDirector'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_DetailsDirectorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Boblan Winter' custom control equals 'Boblan Winter '
        /// </summary>
        public string UIBoblanWinterCustomInnerText = "Boblan Winter ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_CreateMovie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_CreateMovieParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'http://localhost:24817/' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditText = "http://localhost:24817/";
        
        /// <summary>
        /// Type '{Enter}' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Select 'Britney Spears' in 'DirectorId' combo box
        /// </summary>
        public string UIDirectorIdComboBox1SelectedItem = "Britney Spears";
        
        /// <summary>
        /// Type 'Gone With The Wind' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "Gone With The Wind";
        
        /// <summary>
        /// Type '1965' in 'ReleaseYear' text box
        /// </summary>
        public string UIReleaseYearEditText = "1965";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_SearchMovie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_SearchMovieParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gone with' in 'SearchString' text box
        /// </summary>
        public string UISearchStringEditText = "Gone with";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_SearchMovie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_SearchMovieExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Gone With The Wind' cell equals 'Gone With The Wind '
        /// </summary>
        public string UIGoneWithTheWindCellInnerText = "Gone With The Wind ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_EditMovie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_EditMovieParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Fly to the moon' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "Fly to the moon";
        
        /// <summary>
        /// Type '1987' in 'ReleaseYear' text box
        /// </summary>
        public string UIReleaseYearEditText = "1987";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_EditMovie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_EditMovieExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Fly to the moon' cell equals 'Fly to the moon '
        /// </summary>
        public string UIFlytothemoonCellInnerText = "Fly to the moon ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_DetailsMovie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_DetailsMovieExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Fly to the moon' custom control equals 'Fly to the moon '
        /// </summary>
        public string UIFlytothemoonCustomInnerText = "Fly to the moon ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_CreateMovie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_CreateMovieExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Gone with the wind' cell equals 'Gone With The Wind '
        /// </summary>
        public string UIGonewiththewindCellInnerText = "Gone With The Wind ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_CreateCustomer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_CreateCustomerExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Donald Trump' cell equals 'Donald Trump '
        /// </summary>
        public string UIDonaldTrumpCell1InnerText = "Donald Trump ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_EditCustomer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_EditCustomerExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Donald Will Fly' cell equals 'Donald Will Fly '
        /// </summary>
        public string UIDonaldWillFlyCellInnerText = "Donald Will Fly ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_DeatilsCustomer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_DeatilsCustomerExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Donald Will Fly' custom control equals 'Donald Will Fly '
        /// </summary>
        public string UIDonaldWillFlyCustomInnerText = "Donald Will Fly ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageMovieRentalIWindow : BrowserWindow
    {
        
        public UIHomePageMovieRentalIWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - MovieRental - Internet Explorer";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - MovieRental - Internet Explorer");
            this.WindowTitles.Add("http://localhost:24817/ - Internet Explorer");
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            this.WindowTitles.Add("Create - MovieRental - Internet Explorer");
            this.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
            this.WindowTitles.Add("Details - MovieRental - Internet Explorer");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIHomePageMovieRentalDocument UIHomePageMovieRentalDocument
        {
            get
            {
                if ((this.mUIHomePageMovieRentalDocument == null))
                {
                    this.mUIHomePageMovieRentalDocument = new UIHomePageMovieRentalDocument(this);
                }
                return this.mUIHomePageMovieRentalDocument;
            }
        }
        
        public UIIndexMovieRentalDocument UIIndexMovieRentalDocument
        {
            get
            {
                if ((this.mUIIndexMovieRentalDocument == null))
                {
                    this.mUIIndexMovieRentalDocument = new UIIndexMovieRentalDocument(this);
                }
                return this.mUIIndexMovieRentalDocument;
            }
        }
        
        public UICreateMovieRentalDocument UICreateMovieRentalDocument
        {
            get
            {
                if ((this.mUICreateMovieRentalDocument == null))
                {
                    this.mUICreateMovieRentalDocument = new UICreateMovieRentalDocument(this);
                }
                return this.mUICreateMovieRentalDocument;
            }
        }
        
        public UIIndexMovieRentalDocument1 UIIndexMovieRentalDocument1
        {
            get
            {
                if ((this.mUIIndexMovieRentalDocument1 == null))
                {
                    this.mUIIndexMovieRentalDocument1 = new UIIndexMovieRentalDocument1(this);
                }
                return this.mUIIndexMovieRentalDocument1;
            }
        }
        
        public UIEditMovieRentalDocument UIEditMovieRentalDocument
        {
            get
            {
                if ((this.mUIEditMovieRentalDocument == null))
                {
                    this.mUIEditMovieRentalDocument = new UIEditMovieRentalDocument(this);
                }
                return this.mUIEditMovieRentalDocument;
            }
        }
        
        public UIDetailsMovieRentalDocument UIDetailsMovieRentalDocument
        {
            get
            {
                if ((this.mUIDetailsMovieRentalDocument == null))
                {
                    this.mUIDetailsMovieRentalDocument = new UIDetailsMovieRentalDocument(this);
                }
                return this.mUIDetailsMovieRentalDocument;
            }
        }
        
        public UIIndexMovieRentalDocument2 UIIndexMovieRentalDocument2
        {
            get
            {
                if ((this.mUIIndexMovieRentalDocument2 == null))
                {
                    this.mUIIndexMovieRentalDocument2 = new UIIndexMovieRentalDocument2(this);
                }
                return this.mUIIndexMovieRentalDocument2;
            }
        }
        
        public UICreateMovieRentalDocument1 UICreateMovieRentalDocument1
        {
            get
            {
                if ((this.mUICreateMovieRentalDocument1 == null))
                {
                    this.mUICreateMovieRentalDocument1 = new UICreateMovieRentalDocument1(this);
                }
                return this.mUICreateMovieRentalDocument1;
            }
        }
        
        public UIIndexMovieRentalDocument3 UIIndexMovieRentalDocument3
        {
            get
            {
                if ((this.mUIIndexMovieRentalDocument3 == null))
                {
                    this.mUIIndexMovieRentalDocument3 = new UIIndexMovieRentalDocument3(this);
                }
                return this.mUIIndexMovieRentalDocument3;
            }
        }
        
        public UIEditMovieRentalDocument1 UIEditMovieRentalDocument1
        {
            get
            {
                if ((this.mUIEditMovieRentalDocument1 == null))
                {
                    this.mUIEditMovieRentalDocument1 = new UIEditMovieRentalDocument1(this);
                }
                return this.mUIEditMovieRentalDocument1;
            }
        }
        
        public UIDetailsMovieRentalDocument1 UIDetailsMovieRentalDocument1
        {
            get
            {
                if ((this.mUIDetailsMovieRentalDocument1 == null))
                {
                    this.mUIDetailsMovieRentalDocument1 = new UIDetailsMovieRentalDocument1(this);
                }
                return this.mUIDetailsMovieRentalDocument1;
            }
        }
        
        public UIIndexMovieRentalDocument4 UIIndexMovieRentalDocument4
        {
            get
            {
                if ((this.mUIIndexMovieRentalDocument4 == null))
                {
                    this.mUIIndexMovieRentalDocument4 = new UIIndexMovieRentalDocument4(this);
                }
                return this.mUIIndexMovieRentalDocument4;
            }
        }
        
        public UICreateMovieRentalDocument2 UICreateMovieRentalDocument2
        {
            get
            {
                if ((this.mUICreateMovieRentalDocument2 == null))
                {
                    this.mUICreateMovieRentalDocument2 = new UICreateMovieRentalDocument2(this);
                }
                return this.mUICreateMovieRentalDocument2;
            }
        }
        
        public UIIndexMovieRentalDocument5 UIIndexMovieRentalDocument5
        {
            get
            {
                if ((this.mUIIndexMovieRentalDocument5 == null))
                {
                    this.mUIIndexMovieRentalDocument5 = new UIIndexMovieRentalDocument5(this);
                }
                return this.mUIIndexMovieRentalDocument5;
            }
        }
        
        public UIEditMovieRentalDocument2 UIEditMovieRentalDocument2
        {
            get
            {
                if ((this.mUIEditMovieRentalDocument2 == null))
                {
                    this.mUIEditMovieRentalDocument2 = new UIEditMovieRentalDocument2(this);
                }
                return this.mUIEditMovieRentalDocument2;
            }
        }
        
        public UIDetailsMovieRentalDocument2 UIDetailsMovieRentalDocument2
        {
            get
            {
                if ((this.mUIDetailsMovieRentalDocument2 == null))
                {
                    this.mUIDetailsMovieRentalDocument2 = new UIDetailsMovieRentalDocument2(this);
                }
                return this.mUIDetailsMovieRentalDocument2;
            }
        }
        
        public UIEditMovieRentalDocument3 UIEditMovieRentalDocument3
        {
            get
            {
                if ((this.mUIEditMovieRentalDocument3 == null))
                {
                    this.mUIEditMovieRentalDocument3 = new UIEditMovieRentalDocument3(this);
                }
                return this.mUIEditMovieRentalDocument3;
            }
        }
        
        public UIDetailsMovieRentalDocument3 UIDetailsMovieRentalDocument3
        {
            get
            {
                if ((this.mUIDetailsMovieRentalDocument3 == null))
                {
                    this.mUIDetailsMovieRentalDocument3 = new UIDetailsMovieRentalDocument3(this);
                }
                return this.mUIDetailsMovieRentalDocument3;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIHomePageMovieRentalDocument mUIHomePageMovieRentalDocument;
        
        private UIIndexMovieRentalDocument mUIIndexMovieRentalDocument;
        
        private UICreateMovieRentalDocument mUICreateMovieRentalDocument;
        
        private UIIndexMovieRentalDocument1 mUIIndexMovieRentalDocument1;
        
        private UIEditMovieRentalDocument mUIEditMovieRentalDocument;
        
        private UIDetailsMovieRentalDocument mUIDetailsMovieRentalDocument;
        
        private UIIndexMovieRentalDocument2 mUIIndexMovieRentalDocument2;
        
        private UICreateMovieRentalDocument1 mUICreateMovieRentalDocument1;
        
        private UIIndexMovieRentalDocument3 mUIIndexMovieRentalDocument3;
        
        private UIEditMovieRentalDocument1 mUIEditMovieRentalDocument1;
        
        private UIDetailsMovieRentalDocument1 mUIDetailsMovieRentalDocument1;
        
        private UIIndexMovieRentalDocument4 mUIIndexMovieRentalDocument4;
        
        private UICreateMovieRentalDocument2 mUICreateMovieRentalDocument2;
        
        private UIIndexMovieRentalDocument5 mUIIndexMovieRentalDocument5;
        
        private UIEditMovieRentalDocument2 mUIEditMovieRentalDocument2;
        
        private UIDetailsMovieRentalDocument2 mUIDetailsMovieRentalDocument2;
        
        private UIEditMovieRentalDocument3 mUIEditMovieRentalDocument3;
        
        private UIDetailsMovieRentalDocument3 mUIDetailsMovieRentalDocument3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("Home Page - MovieRental - Internet Explorer");
            this.WindowTitles.Add("http://localhost:24817/ - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("Home Page - MovieRental - Internet Explorer");
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("http://localhost:24817/ - Internet Explorer");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageMovieRentalDocument : HtmlDocument
    {
        
        public UIHomePageMovieRentalDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/";
            this.WindowTitles.Add("Home Page - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICustomersHyperlink
        {
            get
            {
                if ((this.mUICustomersHyperlink == null))
                {
                    this.mUICustomersHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICustomersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICustomersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICustomersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICustomersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Customers";
                    this.mUICustomersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Customers";
                    this.mUICustomersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICustomersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Customers";
                    this.mUICustomersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICustomersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Customers\"";
                    this.mUICustomersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUICustomersHyperlink.WindowTitles.Add("Home Page - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUICustomersHyperlink;
            }
        }
        
        public HtmlHyperlink UIDirectorsHyperlink
        {
            get
            {
                if ((this.mUIDirectorsHyperlink == null))
                {
                    this.mUIDirectorsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDirectorsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDirectorsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDirectorsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDirectorsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Directors";
                    this.mUIDirectorsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Directors";
                    this.mUIDirectorsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDirectorsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Directors";
                    this.mUIDirectorsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDirectorsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Directors\"";
                    this.mUIDirectorsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIDirectorsHyperlink.WindowTitles.Add("Home Page - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDirectorsHyperlink;
            }
        }
        
        public HtmlHyperlink UIMoviesHyperlink
        {
            get
            {
                if ((this.mUIMoviesHyperlink == null))
                {
                    this.mUIMoviesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMoviesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIMoviesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMoviesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMoviesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Movies";
                    this.mUIMoviesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Movies";
                    this.mUIMoviesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMoviesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Movies";
                    this.mUIMoviesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMoviesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Movies\"";
                    this.mUIMoviesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIMoviesHyperlink.WindowTitles.Add("Home Page - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIMoviesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICustomersHyperlink;
        
        private HtmlHyperlink mUIDirectorsHyperlink;
        
        private HtmlHyperlink mUIMoviesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexMovieRentalDocument : HtmlDocument
    {
        
        public UIIndexMovieRentalDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Customers";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Customers";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewCustomerHyperlink
        {
            get
            {
                if ((this.mUICreateNewCustomerHyperlink == null))
                {
                    this.mUICreateNewCustomerHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewCustomerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewCustomerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewCustomerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewCustomerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New Customer";
                    this.mUICreateNewCustomerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Customers/Create";
                    this.mUICreateNewCustomerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewCustomerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Customers/Create";
                    this.mUICreateNewCustomerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewCustomerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Customers/Create\"";
                    this.mUICreateNewCustomerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUICreateNewCustomerHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUICreateNewCustomerHyperlink;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlEdit UISearchStringEdit
        {
            get
            {
                if ((this.mUISearchStringEdit == null))
                {
                    this.mUISearchStringEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "SearchString";
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"SearchString\" type=\"text\"";
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUISearchStringEdit.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISearchStringEdit;
            }
        }
        
        public HtmlInputButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Search";
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUISearchButton.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Customers/Details/9005";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Customers/Details/9005";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Customers/Details/9005\"";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "22";
                    this.mUIDetailsHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Customers/Edit/1007";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Customers/Edit/1007";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Customers/Edit/1007\"";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIEditHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink1
        {
            get
            {
                if ((this.mUIDetailsHyperlink1 == null))
                {
                    this.mUIDetailsHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Customers/Details/1007";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Customers/Details/1007";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Customers/Details/1007\"";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUIDetailsHyperlink1.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDetailsHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewCustomerHyperlink;
        
        private UIItemTable mUIItemTable;
        
        private HtmlEdit mUISearchStringEdit;
        
        private HtmlInputButton mUISearchButton;
        
        private HtmlHyperlink mUIDetailsHyperlink;
        
        private HtmlHyperlink mUIEditHyperlink;
        
        private HtmlHyperlink mUIDetailsHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\nDate of Birth \r\n\r\nEmail \r\n\r\nPho";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIDonaldTrumpCell
        {
            get
            {
                if ((this.mUIDonaldTrumpCell == null))
                {
                    this.mUIDonaldTrumpCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Donald Trump ";
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "6";
                    this.mUIDonaldTrumpCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDonaldTrumpCell;
            }
        }
        
        public HtmlCell UISuperDonaldTrumpCell
        {
            get
            {
                if ((this.mUISuperDonaldTrumpCell == null))
                {
                    this.mUISuperDonaldTrumpCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUISuperDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUISuperDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUISuperDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUISuperDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Super Donald Trump ";
                    this.mUISuperDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUISuperDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUISuperDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUISuperDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUISuperDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "11";
                    this.mUISuperDonaldTrumpCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISuperDonaldTrumpCell;
            }
        }
        
        public HtmlCell UIDonaldTrumpCell1
        {
            get
            {
                if ((this.mUIDonaldTrumpCell1 == null))
                {
                    this.mUIDonaldTrumpCell1 = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIDonaldTrumpCell1.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIDonaldTrumpCell1.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIDonaldTrumpCell1.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIDonaldTrumpCell1.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Donald Trump ";
                    this.mUIDonaldTrumpCell1.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIDonaldTrumpCell1.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIDonaldTrumpCell1.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIDonaldTrumpCell1.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIDonaldTrumpCell1.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIDonaldTrumpCell1.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDonaldTrumpCell1;
            }
        }
        
        public HtmlCell UIDonaldWillFlyCell
        {
            get
            {
                if ((this.mUIDonaldWillFlyCell == null))
                {
                    this.mUIDonaldWillFlyCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIDonaldWillFlyCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIDonaldWillFlyCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIDonaldWillFlyCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIDonaldWillFlyCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Donald Will Fly ";
                    this.mUIDonaldWillFlyCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIDonaldWillFlyCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIDonaldWillFlyCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIDonaldWillFlyCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIDonaldWillFlyCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIDonaldWillFlyCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDonaldWillFlyCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIDonaldTrumpCell;
        
        private HtmlCell mUISuperDonaldTrumpCell;
        
        private HtmlCell mUIDonaldTrumpCell1;
        
        private HtmlCell mUIDonaldWillFlyCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateMovieRentalDocument : HtmlDocument
    {
        
        public UICreateMovieRentalDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Customers/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Customers/Create";
            this.WindowTitles.Add("Create - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control\" id=\"Nam";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUINameEdit.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlEdit UIDobEdit
        {
            get
            {
                if ((this.mUIDobEdit == null))
                {
                    this.mUIDobEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDobEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Dob";
                    this.mUIDobEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Dob";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Dob";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Dob\" class=\"form-control\" id=\"Dob\"";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIDobEdit.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDobEdit;
            }
        }
        
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIEmailEdit.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPhoneEdit
        {
            get
            {
                if ((this.mUIPhoneEdit == null))
                {
                    this.mUIPhoneEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Phone";
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Phone";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Phone";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Phone\" class=\"form-control\" id=\"Ph";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIPhoneEdit.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIPhoneEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUICreateButton.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlEdit mUIDobEdit;
        
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPhoneEdit;
        
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexMovieRentalDocument1 : HtmlDocument
    {
        
        public UIIndexMovieRentalDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Customers";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Customers?SearchString=Donald";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public UIItemTable1 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable1(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Customers/Edit/9004";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Customers/Edit/9004";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Customers/Edit/9004\"";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIEditHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable1 mUIItemTable;
        
        private HtmlHyperlink mUIEditHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable1 : HtmlTable
    {
        
        public UIItemTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\nDate of Birth \r\n\r\nEmail \r\n\r\nPho";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIDonaldTrumpCell
        {
            get
            {
                if ((this.mUIDonaldTrumpCell == null))
                {
                    this.mUIDonaldTrumpCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIDonaldTrumpCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Donald Trump ";
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIDonaldTrumpCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIDonaldTrumpCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDonaldTrumpCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIDonaldTrumpCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditMovieRentalDocument : HtmlDocument
    {
        
        public UIEditMovieRentalDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Customers/Edit/9004";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Customers/Edit/9004";
            this.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control\" id=\"Nam";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINameEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIEmailEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPhoneEdit
        {
            get
            {
                if ((this.mUIPhoneEdit == null))
                {
                    this.mUIPhoneEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Phone";
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Phone";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Phone";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Phone\" class=\"form-control\" id=\"Ph";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIPhoneEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIPhoneEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUISaveButton.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPhoneEdit;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetailsMovieRentalDocument : HtmlDocument
    {
        
        public UIDetailsMovieRentalDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Customers/Details/9005";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Customers/Details/9005";
            this.WindowTitles.Add("Details - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UISuperDonaldTrumpCustom
        {
            get
            {
                if ((this.mUISuperDonaldTrumpCustom == null))
                {
                    this.mUISuperDonaldTrumpCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUISuperDonaldTrumpCustom.SearchProperties["TagName"] = "DD";
                    this.mUISuperDonaldTrumpCustom.SearchProperties["Id"] = null;
                    this.mUISuperDonaldTrumpCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUISuperDonaldTrumpCustom.FilterProperties["Class"] = null;
                    this.mUISuperDonaldTrumpCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUISuperDonaldTrumpCustom.FilterProperties["InnerText"] = "Super Donald Trump ";
                    this.mUISuperDonaldTrumpCustom.FilterProperties["TagInstance"] = "1";
                    this.mUISuperDonaldTrumpCustom.WindowTitles.Add("Details - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISuperDonaldTrumpCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUISuperDonaldTrumpCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexMovieRentalDocument2 : HtmlDocument
    {
        
        public UIIndexMovieRentalDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Directors";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Directors";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewDirectorHyperlink
        {
            get
            {
                if ((this.mUICreateNewDirectorHyperlink == null))
                {
                    this.mUICreateNewDirectorHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewDirectorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewDirectorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewDirectorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewDirectorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New Director";
                    this.mUICreateNewDirectorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Directors/Create";
                    this.mUICreateNewDirectorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewDirectorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Directors/Create";
                    this.mUICreateNewDirectorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewDirectorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Directors/Create\"";
                    this.mUICreateNewDirectorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUICreateNewDirectorHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUICreateNewDirectorHyperlink;
            }
        }
        
        public UIItemTable2 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable2(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlEdit UISearchStringEdit
        {
            get
            {
                if ((this.mUISearchStringEdit == null))
                {
                    this.mUISearchStringEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "SearchString";
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"SearchString\" type=\"text\"";
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUISearchStringEdit.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISearchStringEdit;
            }
        }
        
        public HtmlInputButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Search";
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUISearchButton.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        
        public UIItemTable11 UIItemTable1
        {
            get
            {
                if ((this.mUIItemTable1 == null))
                {
                    this.mUIItemTable1 = new UIItemTable11(this);
                }
                return this.mUIItemTable1;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Directors/Details/5011";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Directors/Details/5011";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Directors/Details/5011\"";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIDetailsHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewDirectorHyperlink;
        
        private UIItemTable2 mUIItemTable;
        
        private HtmlEdit mUISearchStringEdit;
        
        private HtmlInputButton mUISearchButton;
        
        private UIItemTable11 mUIItemTable1;
        
        private HtmlHyperlink mUIDetailsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable2 : HtmlTable
    {
        
        public UIItemTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\nGender \r\n\r\n\r\n\r\nAlice Spring Fem";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIAliceSpringCell
        {
            get
            {
                if ((this.mUIAliceSpringCell == null))
                {
                    this.mUIAliceSpringCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Alice Spring ";
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIAliceSpringCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIAliceSpringCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIAliceSpringCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable11 : HtmlTable
    {
        
        public UIItemTable11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\nGender \r\n\r\n\r\n\r\nBoblan Winter Ma";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIBoblanWinterCell
        {
            get
            {
                if ((this.mUIBoblanWinterCell == null))
                {
                    this.mUIBoblanWinterCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIBoblanWinterCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIBoblanWinterCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIBoblanWinterCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIBoblanWinterCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Boblan Winter ";
                    this.mUIBoblanWinterCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIBoblanWinterCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIBoblanWinterCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIBoblanWinterCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIBoblanWinterCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIBoblanWinterCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIBoblanWinterCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIBoblanWinterCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateMovieRentalDocument1 : HtmlDocument
    {
        
        public UICreateMovieRentalDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Directors/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Directors/Create";
            this.WindowTitles.Add("Create - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control\" id=\"Nam";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUINameEdit.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlRadioButton UIGenderRadioButton
        {
            get
            {
                if ((this.mUIGenderRadioButton == null))
                {
                    this.mUIGenderRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIGenderRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "Gender";
                    this.mUIGenderRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "Gender";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "Female";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Gender";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"Gender\" id=\"Gender\" type=\"radio\" v";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "3";
                    this.mUIGenderRadioButton.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIGenderRadioButton;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUICreateButton.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlRadioButton mUIGenderRadioButton;
        
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexMovieRentalDocument3 : HtmlDocument
    {
        
        public UIIndexMovieRentalDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Directors";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Directors?SearchString=Alice";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public UIItemTable3 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable3(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Directors/Edit/5011";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Directors/Edit/5011";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Directors/Edit/5011\"";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "12";
                    this.mUIEditHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable3 mUIItemTable;
        
        private HtmlHyperlink mUIEditHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable3 : HtmlTable
    {
        
        public UIItemTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\nGender \r\n\r\n\r\n\r\nAlice Spring Fem";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIAliceSpringCell
        {
            get
            {
                if ((this.mUIAliceSpringCell == null))
                {
                    this.mUIAliceSpringCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIAliceSpringCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Alice Spring ";
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIAliceSpringCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIAliceSpringCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIAliceSpringCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIAliceSpringCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditMovieRentalDocument1 : HtmlDocument
    {
        
        public UIEditMovieRentalDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Directors/Edit/5011";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Directors/Edit/5011";
            this.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control\" id=\"Nam";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINameEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlRadioButton UIGenderRadioButton
        {
            get
            {
                if ((this.mUIGenderRadioButton == null))
                {
                    this.mUIGenderRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIGenderRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "Gender";
                    this.mUIGenderRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "Gender";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "Male";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Gender";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"Gender\" id=\"Gender\" type=\"radio\" v";
                    this.mUIGenderRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "3";
                    this.mUIGenderRadioButton.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIGenderRadioButton;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUISaveButton.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlRadioButton mUIGenderRadioButton;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetailsMovieRentalDocument1 : HtmlDocument
    {
        
        public UIDetailsMovieRentalDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Directors/Details/5011";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Directors/Details/5011";
            this.WindowTitles.Add("Details - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIBoblanWinterCustom
        {
            get
            {
                if ((this.mUIBoblanWinterCustom == null))
                {
                    this.mUIBoblanWinterCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIBoblanWinterCustom.SearchProperties["TagName"] = "DD";
                    this.mUIBoblanWinterCustom.SearchProperties["Id"] = null;
                    this.mUIBoblanWinterCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIBoblanWinterCustom.FilterProperties["Class"] = null;
                    this.mUIBoblanWinterCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIBoblanWinterCustom.FilterProperties["InnerText"] = "Boblan Winter ";
                    this.mUIBoblanWinterCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIBoblanWinterCustom.WindowTitles.Add("Details - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIBoblanWinterCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIBoblanWinterCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexMovieRentalDocument4 : HtmlDocument
    {
        
        public UIIndexMovieRentalDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Movies";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Movies";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewMovieHyperlink
        {
            get
            {
                if ((this.mUICreateNewMovieHyperlink == null))
                {
                    this.mUICreateNewMovieHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewMovieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewMovieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewMovieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewMovieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New Movie";
                    this.mUICreateNewMovieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Movies/Create";
                    this.mUICreateNewMovieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewMovieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Movies/Create";
                    this.mUICreateNewMovieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewMovieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Movies/Create\"";
                    this.mUICreateNewMovieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUICreateNewMovieHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUICreateNewMovieHyperlink;
            }
        }
        
        public UIItemTable4 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable4(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlEdit UISearchStringEdit
        {
            get
            {
                if ((this.mUISearchStringEdit == null))
                {
                    this.mUISearchStringEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "SearchString";
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISearchStringEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"SearchString\" type=\"text\"";
                    this.mUISearchStringEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUISearchStringEdit.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISearchStringEdit;
            }
        }
        
        public HtmlInputButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Search";
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUISearchButton.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        
        public UIItemTable12 UIItemTable1
        {
            get
            {
                if ((this.mUIItemTable1 == null))
                {
                    this.mUIItemTable1 = new UIItemTable12(this);
                }
                return this.mUIItemTable1;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Movies/Details/4101";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Movies/Details/4101";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Movies/Details/4101\"";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUIDetailsHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        
        public UIItemTable21 UIItemTable2
        {
            get
            {
                if ((this.mUIItemTable2 == null))
                {
                    this.mUIItemTable2 = new UIItemTable21(this);
                }
                return this.mUIItemTable2;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewMovieHyperlink;
        
        private UIItemTable4 mUIItemTable;
        
        private HtmlEdit mUISearchStringEdit;
        
        private HtmlInputButton mUISearchButton;
        
        private UIItemTable12 mUIItemTable1;
        
        private HtmlHyperlink mUIDetailsHyperlink;
        
        private UIItemTable21 mUIItemTable2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable4 : HtmlTable
    {
        
        public UIItemTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Title \r\n\r\nRelease Year \r\n\r\n\r\n\r\nGone With";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIGoneWithTheWindCell
        {
            get
            {
                if ((this.mUIGoneWithTheWindCell == null))
                {
                    this.mUIGoneWithTheWindCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Gone With The Wind ";
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIGoneWithTheWindCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIGoneWithTheWindCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIGoneWithTheWindCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable12 : HtmlTable
    {
        
        public UIItemTable12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Title \r\n\r\nRelease Year \r\n\r\n\r\n\r\nFly to th";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIFlytothemoonCell
        {
            get
            {
                if ((this.mUIFlytothemoonCell == null))
                {
                    this.mUIFlytothemoonCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIFlytothemoonCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIFlytothemoonCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIFlytothemoonCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIFlytothemoonCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Fly to the moon ";
                    this.mUIFlytothemoonCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIFlytothemoonCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIFlytothemoonCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIFlytothemoonCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIFlytothemoonCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIFlytothemoonCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIFlytothemoonCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIFlytothemoonCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable21 : HtmlTable
    {
        
        public UIItemTable21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Title \r\n\r\nRelease Year \r\n\r\n\r\n\r\nGone with";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIGonewiththewindCell
        {
            get
            {
                if ((this.mUIGonewiththewindCell == null))
                {
                    this.mUIGonewiththewindCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIGonewiththewindCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIGonewiththewindCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIGonewiththewindCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIGonewiththewindCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Gone with the wind ";
                    this.mUIGonewiththewindCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIGonewiththewindCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIGonewiththewindCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIGonewiththewindCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIGonewiththewindCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIGonewiththewindCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIGonewiththewindCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIGonewiththewindCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateMovieRentalDocument2 : HtmlDocument
    {
        
        public UICreateMovieRentalDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Movies/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Movies/Create";
            this.WindowTitles.Add("Create - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDirectorIdComboBox
        {
            get
            {
                if ((this.mUIDirectorIdComboBox == null))
                {
                    this.mUIDirectorIdComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDirectorIdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "DirectorId";
                    this.mUIDirectorIdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "DirectorId";
                    this.mUIDirectorIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIDirectorIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDirectorIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDirectorIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "7";
                    this.mUIDirectorIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control";
                    this.mUIDirectorIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"DirectorId\" class=\"form-control\" i";
                    this.mUIDirectorIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIDirectorIdComboBox.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDirectorIdComboBox;
            }
        }
        
        public HtmlEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Title";
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Title\" class=\"form-control\" id=\"Ti";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUITitleEdit.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public HtmlEdit UIReleaseYearEdit
        {
            get
            {
                if ((this.mUIReleaseYearEdit == null))
                {
                    this.mUIReleaseYearEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIReleaseYearEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ReleaseYear";
                    this.mUIReleaseYearEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ReleaseYear";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "ReleaseYear";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ReleaseYear\" class=\"form-control\" ";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIReleaseYearEdit.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIReleaseYearEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUICreateButton.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        
        public HtmlComboBox UIDirectorIdComboBox1
        {
            get
            {
                if ((this.mUIDirectorIdComboBox1 == null))
                {
                    this.mUIDirectorIdComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDirectorIdComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "DirectorId";
                    this.mUIDirectorIdComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "DirectorId";
                    this.mUIDirectorIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIDirectorIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDirectorIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDirectorIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "6";
                    this.mUIDirectorIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control";
                    this.mUIDirectorIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"DirectorId\" class=\"form-control\" i";
                    this.mUIDirectorIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIDirectorIdComboBox1.WindowTitles.Add("Create - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDirectorIdComboBox1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDirectorIdComboBox;
        
        private HtmlEdit mUITitleEdit;
        
        private HtmlEdit mUIReleaseYearEdit;
        
        private HtmlInputButton mUICreateButton;
        
        private HtmlComboBox mUIDirectorIdComboBox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexMovieRentalDocument5 : HtmlDocument
    {
        
        public UIIndexMovieRentalDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Movies";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Movies?SearchString=Gone+with";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public UIItemTable5 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable5(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Movies/Edit/4101";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/Movies/Edit/4101";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Movies/Edit/4101\"";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIEditHyperlink.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable5 mUIItemTable;
        
        private HtmlHyperlink mUIEditHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable5 : HtmlTable
    {
        
        public UIItemTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Title \r\n\r\nRelease Year \r\n\r\n\r\n\r\nGone With";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIGoneWithTheWindCell
        {
            get
            {
                if ((this.mUIGoneWithTheWindCell == null))
                {
                    this.mUIGoneWithTheWindCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIGoneWithTheWindCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Gone With The Wind ";
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIGoneWithTheWindCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIGoneWithTheWindCell.WindowTitles.Add("Index - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIGoneWithTheWindCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIGoneWithTheWindCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditMovieRentalDocument2 : HtmlDocument
    {
        
        public UIEditMovieRentalDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Movies/Edit/4101";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Movies/Edit/4101";
            this.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Title";
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Title\" class=\"form-control\" id=\"Ti";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUITitleEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public HtmlEdit UIReleaseYearEdit
        {
            get
            {
                if ((this.mUIReleaseYearEdit == null))
                {
                    this.mUIReleaseYearEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIReleaseYearEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ReleaseYear";
                    this.mUIReleaseYearEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ReleaseYear";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "ReleaseYear";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ReleaseYear\" class=\"form-control\" ";
                    this.mUIReleaseYearEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIReleaseYearEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIReleaseYearEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUISaveButton.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITitleEdit;
        
        private HtmlEdit mUIReleaseYearEdit;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetailsMovieRentalDocument2 : HtmlDocument
    {
        
        public UIDetailsMovieRentalDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Movies/Details/4101";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Movies/Details/4101";
            this.WindowTitles.Add("Details - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIFlytothemoonCustom
        {
            get
            {
                if ((this.mUIFlytothemoonCustom == null))
                {
                    this.mUIFlytothemoonCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIFlytothemoonCustom.SearchProperties["TagName"] = "DD";
                    this.mUIFlytothemoonCustom.SearchProperties["Id"] = null;
                    this.mUIFlytothemoonCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIFlytothemoonCustom.FilterProperties["Class"] = null;
                    this.mUIFlytothemoonCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIFlytothemoonCustom.FilterProperties["InnerText"] = "Fly to the moon ";
                    this.mUIFlytothemoonCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIFlytothemoonCustom.WindowTitles.Add("Details - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIFlytothemoonCustom;
            }
        }
        
        public HtmlHyperlink UIHomeHyperlink
        {
            get
            {
                if ((this.mUIHomeHyperlink == null))
                {
                    this.mUIHomeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Home";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:24817/";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/\"";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIHomeHyperlink.WindowTitles.Add("Details - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIHomeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIFlytothemoonCustom;
        
        private HtmlHyperlink mUIHomeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditMovieRentalDocument3 : HtmlDocument
    {
        
        public UIEditMovieRentalDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Customers/Edit/1007";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Customers/Edit/1007";
            this.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control\" id=\"Nam";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINameEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlEdit UIDobEdit
        {
            get
            {
                if ((this.mUIDobEdit == null))
                {
                    this.mUIDobEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDobEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Dob";
                    this.mUIDobEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Dob";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Dob";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Dob\" class=\"form-control\" id=\"Dob\"";
                    this.mUIDobEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIDobEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDobEdit;
            }
        }
        
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIEmailEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPhoneEdit
        {
            get
            {
                if ((this.mUIPhoneEdit == null))
                {
                    this.mUIPhoneEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Phone";
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Phone";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Phone";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Phone\" class=\"form-control\" id=\"Ph";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIPhoneEdit.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIPhoneEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUISaveButton.WindowTitles.Add("Edit - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlEdit mUIDobEdit;
        
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPhoneEdit;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetailsMovieRentalDocument3 : HtmlDocument
    {
        
        public UIDetailsMovieRentalDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - MovieRental";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Customers/Details/1007";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:24817/Customers/Details/1007";
            this.WindowTitles.Add("Details - MovieRental - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIDonaldWillFlyCustom
        {
            get
            {
                if ((this.mUIDonaldWillFlyCustom == null))
                {
                    this.mUIDonaldWillFlyCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIDonaldWillFlyCustom.SearchProperties["TagName"] = "DD";
                    this.mUIDonaldWillFlyCustom.SearchProperties["Id"] = null;
                    this.mUIDonaldWillFlyCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIDonaldWillFlyCustom.FilterProperties["Class"] = null;
                    this.mUIDonaldWillFlyCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIDonaldWillFlyCustom.FilterProperties["InnerText"] = "Donald Will Fly ";
                    this.mUIDonaldWillFlyCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIDonaldWillFlyCustom.WindowTitles.Add("Details - MovieRental - Internet Explorer");
                    #endregion
                }
                return this.mUIDonaldWillFlyCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIDonaldWillFlyCustom;
        #endregion
    }
}
